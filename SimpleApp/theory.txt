Тестирование нашего проекта


Если мы хотим протестировать слой, который отвечает за работу с данными (репозитории), то:

Не следует использовать для тестирования ту же базу данных (файл), которая используется в основном проекте
Вместо этого мы будем делать временный файл (временную базу данных) перед каждым тестом и будем сразу удалять его после каждого теста
Почему? Мы не хотим, чтобы тест повредил или как-либо изменил те данные, которые нам важны в основном проекте
Если мы с вами хотим протестировать сервис, который зависит от другого репозитория, какую реализацию репозитория нам нужно подставить?\

Правильный подход - создать временную, фэйковую, заглушку, mock-реализацию для конкретного теста.
Для этой фэйковой реализации мы явно опишем какие значения должен возвращать тот или иной метод.
Такой подход называется mock-тестированием и используется в Unit/Модульных тестах.
Мы хотим проверить наш класс, независимо от того, как работают другие, чтобы точно понять причину ошибки.
@BeforeEach - аннотация JUnit, которой мы можем пометить метод, запускаемый перед каждым тестом автоматически

@AfterEach - аннотация JUnit, которой мы можем пометить метод, запускаемый после каждого теста

@Nested - аннотация, которой можно помечать вложенные классы с тестами

Вложенные классы используем для группировки тестов, каждый вложенный класс может содержать тесты для конкретного метода
Заметки
Arrays.asList(T ... a) - создает ArrayList на основе набора объектов.
Mockito - библиотека для Mock-тестирования.
.class - получение описания типа какого-либо класса, используется, когда Java нужно проверить, принадлежит ли какой-либо объект какому-то классу.
stubbing - процесс, когда мы явно прописываем реализацию какой-либо заглушки
verify - подходит, когда нужно проверить, был ли вызван void-метод
Словарик
before each - перед каждым
after each - после каждого
temp - временный
exists - существует (содержится)
nested - внутренний
expected - ожидаемый (тот результат, который мы ожидаем)
actual - актуальный (тот результат, который нам пришел по факту)
replace underscores - заменить нижние подчеркивания